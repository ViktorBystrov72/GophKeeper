VERSION ?= N/A
BUILD_DATE ?= $(shell date '+%Y-%m-%d %H:%M:%S')
BUILD_COMMIT ?= $(shell git rev-parse --short HEAD 2>/dev/null || echo N/A)

LDFLAGS = -X github.com/GophKeeper/internal/version.BuildVersion=$(VERSION) -X 'github.com/GophKeeper/internal/version.BuildDate=$(BUILD_DATE)' -X github.com/GophKeeper/internal/version.BuildCommit=$(BUILD_COMMIT)

# –¶–µ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.PHONY: help
help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

.PHONY: build
build: build-server build-client ## –°–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä –∏ –∫–ª–∏–µ–Ω—Ç

.PHONY: build-with-version
build-with-version: VERSION = v1.0.0
build-with-version: build ## –°–æ–±—Ä–∞—Ç—å —Å –≤–µ—Ä—Å–∏–µ–π v1.0.0

.PHONY: build-server
build-server: ## –°–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
	go build -ldflags "$(LDFLAGS)" -o bin/server ./cmd/server

.PHONY: build-client
build-client: ## –°–æ–±—Ä–∞—Ç—å –∫–ª–∏–µ–Ω—Ç
	go build -ldflags "$(LDFLAGS)" -o bin/client ./cmd/client

.PHONY: run-server
run-server: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
	go run -ldflags "$(LDFLAGS)" ./cmd/server

.PHONY: run-client
run-client: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç
	go run -ldflags "$(LDFLAGS)" ./cmd/client

.PHONY: test
test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å unit —Ç–µ—Å—Ç—ã
	go test -v -race -coverprofile=coverage.out ./...

.PHONY: test-all
test-all: test test-integration ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã (unit + –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ)

.PHONY: test-integration
test-integration: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å Docker
	./scripts/test-with-docker.sh

.PHONY: test-unit
test-unit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã
	go test -v -race -coverprofile=coverage.out ./... -short

.PHONY: test-storage
test-storage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã storage —Å —Ä–µ–∞–ª—å–Ω–æ–π –ë–î
	./scripts/test-with-docker.sh storage

.PHONY: test-grpc
test-grpc: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã gRPC —Å —Ä–µ–∞–ª—å–Ω–æ–π –ë–î
	./scripts/test-with-docker.sh grpc

.PHONY: start-db
start-db: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	docker compose up -d postgres

.PHONY: start-server
start-server: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
	./scripts/start-server.sh

.PHONY: start-server-bg
start-server-bg: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
	@echo "üîß –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
	@DATABASE_URI="postgres://gophkeeper:password@localhost:5432/gophkeeper?sslmode=disable" \
	JWT_SECRET="your-secret-key" \
	ENCRYPTION_KEY="your-encryption-key" \
	LOG_LEVEL="info" \
	SERVER_ADDRESS=":8080" \
	GRPC_ADDRESS=":9090" \
	./bin/server > server.log 2>&1 &
	@echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (–ª–æ–≥–∏ –≤ server.log)"

.PHONY: start-client
start-client: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç
	./bin/client -grpc localhost:9090

.PHONY: stop-server
stop-server: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
	@pkill -f "./bin/server" || echo "–°–µ—Ä–≤–µ—Ä –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω"
	@echo "‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

.PHONY: stop-db
stop-db: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@docker compose stop postgres
	@echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

.PHONY: stop-all
stop-all: stop-server stop-db ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã GophKeeper..."
	@echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"

.PHONY: run
run: start-db start-server ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É (–ë–î + —Å–µ—Ä–≤–µ—Ä)

.PHONY: ui
ui: start-db start-server-bg ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å UI (–ë–î + —Å–µ—Ä–≤–µ—Ä + –∫–ª–∏–µ–Ω—Ç)
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã GophKeeper..."
	@echo "üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $(shell docker compose ps postgres | grep -q "Up" && echo "‚úÖ –ó–∞–ø—É—â–µ–Ω–∞" || echo "‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω–∞")"
	@echo "üîß –°–µ—Ä–≤–µ—Ä: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
	@echo "üíª –ö–ª–∏–µ–Ω—Ç: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..."
	@echo ""
	@echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ TUI:"
	@echo "   Ctrl+S - –í–æ–π—Ç–∏/–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
	@echo "   Ctrl+R - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤—Ö–æ–¥–æ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π"
	@echo "   1 - –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö"
	@echo "   2 - –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
	@echo "   3 - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä OTP"
	@echo "   s - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"
	@echo "   q - –í—ã—Ö–æ–¥"
	@echo ""
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
	@sleep 5
	@echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞! –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç..."
	@./bin/client -grpc localhost:9090

.PHONY: vet
vet: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ —Å vet
	go vet -vettool=./statictest-darwin ./...

.PHONY: test-coverage
test-coverage: test ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏
	go tool cover -html=coverage.out -o coverage.html
	@echo "Coverage report generated: coverage.html"

.PHONY: proto
proto: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏–∑ proto —Ñ–∞–π–ª–æ–≤
	mkdir -p proto/gen
	protoc --go_out=proto/gen --go_opt=paths=source_relative \
		--go-grpc_out=proto/gen --go-grpc_opt=paths=source_relative \
		proto/*.proto

.PHONY: lint
lint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä—ã
	golangci-lint run

.PHONY: fmt
fmt: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	go fmt ./...

.PHONY: clean
clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–±–æ—Ä–∫–∏
	rm -rf bin/
	rm -rf proto/gen/
	rm -f coverage.out coverage.html

.PHONY: deps
deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	go mod download
	go mod tidy

.PHONY: migrate-up
migrate-up: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤–≤–µ—Ä—Ö
	goose -dir migrations postgres "$(DATABASE_URI)" up

.PHONY: migrate-down
migrate-down: ## –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	goose -dir migrations postgres "$(DATABASE_URI)" down

.PHONY: migrate-status
migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	goose -dir migrations postgres "$(DATABASE_URI)" status

.PHONY: docker-build
docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	docker build -t gophkeeper-server -f Dockerfile.server .
	docker build -t gophkeeper-client -f Dockerfile.client .

.PHONY: docker-run
docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker Compose
	docker-compose up -d

.PHONY: docker-stop
docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose
	docker-compose down

.PHONY: gen-keys
gen-keys: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
	@mkdir -p keys
	@openssl genrsa -out keys/private.pem 2048
	@openssl rsa -in keys/private.pem -pubout -out keys/public.pem
	@echo "–ö–ª—é—á–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø–∞–ø–∫–µ keys/"

.PHONY: setup
setup: deps gen-keys proto ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
	@echo "1. –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
	@echo "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DATABASE_URI"
	@echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏: make migrate-up"

.PHONY: openapi
generate-openapi: ## –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å OpenAPI (Swagger) –∏–∑ proto
	protoc -I proto \
		-I /tmp/googleapis \
		--openapiv2_out=proto/gen \
		--openapiv2_opt logtostderr=true \
		--openapiv2_opt allow_merge=true \
		proto/gophkeeper.proto

.DEFAULT_GOAL := help 